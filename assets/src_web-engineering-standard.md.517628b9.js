import{_ as s,c as a,o as n,O as l}from"./chunks/framework.dd35b821.js";const y=JSON.parse('{"title":"Web 开发规范","description":"","frontmatter":{},"headers":[],"relativePath":"src/web-engineering-standard.md","filePath":"src/web-engineering-standard.md"}'),p={name:"src/web-engineering-standard.md"},e=l(`<h1 id="web-开发规范" tabindex="-1">Web 开发规范 <a class="header-anchor" href="#web-开发规范" aria-label="Permalink to &quot;Web 开发规范&quot;">​</a></h1><h2 id="前言-制定-web-开发规范的目的是什么" tabindex="-1">前言：制定 Web 开发规范的目的是什么？ <a class="header-anchor" href="#前言-制定-web-开发规范的目的是什么" aria-label="Permalink to &quot;前言：制定 Web 开发规范的目的是什么？&quot;">​</a></h2><p>将 Web 软件开发过程进行规范化、标准化，不仅减少团队成员之间不必要的争端，还可以提高开发效率、质量和可维护性。</p><h2 id="_1-如何统一-git-commit-提交信息" tabindex="-1">1. 如何统一 git commit 提交信息？ <a class="header-anchor" href="#_1-如何统一-git-commit-提交信息" aria-label="Permalink to &quot;1. 如何统一 git commit 提交信息？&quot;">​</a></h2><p>NodeJS 项目，想要规范 Git 提交消息，可以借助以下工具：</p><ul><li>commitizen，基于 Node.js 的命令行工具，辅助生成标准化规范化的 commit message。</li><li><a href="https://cz-git.qbb.sh/zh/guide/introduction" target="_blank" rel="noreferrer">cz-git</a>，一款工程性更强，轻量级，高度自定义，标准输出格式的 commitizen 适配器。</li><li>husky，Git Hooks 管理工具。</li><li>@commitlint/cli，commit message 校验工具。</li></ul><p>具体步骤如下：</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-qggIl" id="tab-gScvXgC" checked="checked"><label for="tab-gScvXgC">第一步：配置 commitizen 与 cz-git</label><input type="radio" name="group-qggIl" id="tab-WC3u_uH"><label for="tab-WC3u_uH">第二步：配置 husky 和 commitlint</label><input type="radio" name="group-qggIl" id="tab-g5q8d5Y"><label for="tab-g5q8d5Y">最后：测试</label></div><div class="blocks"><div class="language-md active"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;"># </span><span style="color:#FFCB6B;">1. 全局安装 commitizen</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">npm i -g commitizen</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">，为了直接使用 commitizen 提供的 git-cz 指令。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;"># </span><span style="color:#FFCB6B;">2. 局部安装 commitizen 与 cz-git </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">pnpm add -D commitizen cz-git</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;"># </span><span style="color:#FFCB6B;">3. 在 package.json 中，指定 cz-git 适配器</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">\`\`\`</span><span style="color:#A6ACCD90;">json</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">config</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">commitizen</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">path</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./node_modules/cz-git</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;"># </span><span style="color:#FFCB6B;">1. 局部安装 husky 和 commitlint </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">pnpm add -D husky commitlint</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;"># </span><span style="color:#FFCB6B;">2. 初始化 .husky 配置文件 </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">husky install</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;"># </span><span style="color:#FFCB6B;">3. 初始化 Git Hook 脚本文件 commit-msg </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">npx husky add .husky/commit-msg</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">补充：commit-msg 钩子，在 commit message 被创建之后触发。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;"># </span><span style="color:#FFCB6B;">4. 编辑 commit-msg 脚本文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">npx --no-install commitlint --edit $1</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;"># </span><span style="color:#FFCB6B;">5. cz-git 与 commitlint 进行联动给予校验信息</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">cz-git 允许我们直接写一个 .commitlintrc.js 文件</span></span></code></pre></div><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git add . &amp;&amp; git commit -m &#39;error message&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">git add . &amp;&amp; git cz</span></span></code></pre></div></div></div>`,8),o=[e];function t(c,i,r,m,D,F){return n(),a("div",null,o)}const g=s(p,[["render",t]]);export{y as __pageData,g as default};
